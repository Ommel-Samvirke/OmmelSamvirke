// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OmmelSamvirke.Persistence.DatabaseContext;

#nullable disable

namespace OmmelSamvirke.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230727120729_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OmmelSamvirke.Domain.Features.Admins.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateCreated")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Admins", (string)null);
                });

            modelBuilder.Entity("OmmelSamvirke.Domain.Features.Communities.Models.Community", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateCreated")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Communities", (string)null);
                });

            modelBuilder.Entity("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.ContentBlock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateCreated")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int?>("LayoutConfigurationId")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.Property<int>("XPosition")
                        .HasColumnType("int");

                    b.Property<int>("YPosition")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LayoutConfigurationId");

                    b.ToTable("ContentBlocks");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("OmmelSamvirke.Domain.Features.Pages.Models.LayoutConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateCreated")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LayoutConfigurations", (string)null);
                });

            modelBuilder.Entity("OmmelSamvirke.Domain.Features.Pages.Models.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CommunityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("DesktopConfigurationId")
                        .HasColumnType("int");

                    b.Property<int>("MobileConfigurationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("TabletConfigurationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommunityId");

                    b.HasIndex("DesktopConfigurationId")
                        .IsUnique();

                    b.HasIndex("MobileConfigurationId")
                        .IsUnique();

                    b.HasIndex("TabletConfigurationId")
                        .IsUnique();

                    b.ToTable("Pages", (string)null);
                });

            modelBuilder.Entity("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.HeadlineBlock", b =>
                {
                    b.HasBaseType("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.ContentBlock");

                    b.Property<int>("ContentBlockType")
                        .HasColumnType("int");

                    b.Property<string>("Headline")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.ToTable("HeadlineBlocks", (string)null);
                });

            modelBuilder.Entity("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.ImageBlock", b =>
                {
                    b.HasBaseType("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.ContentBlock");

                    b.Property<int>("ContentBlockType")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.ToTable("ImageBlocks", (string)null);
                });

            modelBuilder.Entity("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.PdfBlock", b =>
                {
                    b.HasBaseType("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.ContentBlock");

                    b.Property<int>("ContentBlockType")
                        .HasColumnType("int");

                    b.Property<string>("PdfUrl")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.ToTable("PdfBlocks", (string)null);
                });

            modelBuilder.Entity("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.SlideshowBlock", b =>
                {
                    b.HasBaseType("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.ContentBlock");

                    b.Property<int>("ContentBlockType")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrls")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SlideshowBlocks", (string)null);
                });

            modelBuilder.Entity("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.TextBlock", b =>
                {
                    b.HasBaseType("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.ContentBlock");

                    b.Property<int>("ContentBlockType")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("TextBlocks", (string)null);
                });

            modelBuilder.Entity("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.VideoBlock", b =>
                {
                    b.HasBaseType("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.ContentBlock");

                    b.Property<int>("ContentBlockType")
                        .HasColumnType("int");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.ToTable("VideoBlocks", (string)null);
                });

            modelBuilder.Entity("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.ContentBlock", b =>
                {
                    b.HasOne("OmmelSamvirke.Domain.Features.Pages.Models.LayoutConfiguration", null)
                        .WithMany("ContentBlocks")
                        .HasForeignKey("LayoutConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OmmelSamvirke.Domain.Features.Pages.Models.Page", b =>
                {
                    b.HasOne("OmmelSamvirke.Domain.Features.Communities.Models.Community", null)
                        .WithMany("Pages")
                        .HasForeignKey("CommunityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OmmelSamvirke.Domain.Features.Pages.Models.LayoutConfiguration", "DesktopConfiguration")
                        .WithOne()
                        .HasForeignKey("OmmelSamvirke.Domain.Features.Pages.Models.Page", "DesktopConfigurationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OmmelSamvirke.Domain.Features.Pages.Models.LayoutConfiguration", "MobileConfiguration")
                        .WithOne()
                        .HasForeignKey("OmmelSamvirke.Domain.Features.Pages.Models.Page", "MobileConfigurationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OmmelSamvirke.Domain.Features.Pages.Models.LayoutConfiguration", "TabletConfiguration")
                        .WithOne()
                        .HasForeignKey("OmmelSamvirke.Domain.Features.Pages.Models.Page", "TabletConfigurationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DesktopConfiguration");

                    b.Navigation("MobileConfiguration");

                    b.Navigation("TabletConfiguration");
                });

            modelBuilder.Entity("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.HeadlineBlock", b =>
                {
                    b.HasOne("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.ContentBlock", null)
                        .WithOne()
                        .HasForeignKey("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.HeadlineBlock", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.ImageBlock", b =>
                {
                    b.HasOne("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.ContentBlock", null)
                        .WithOne()
                        .HasForeignKey("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.ImageBlock", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.PdfBlock", b =>
                {
                    b.HasOne("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.ContentBlock", null)
                        .WithOne()
                        .HasForeignKey("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.PdfBlock", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.SlideshowBlock", b =>
                {
                    b.HasOne("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.ContentBlock", null)
                        .WithOne()
                        .HasForeignKey("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.SlideshowBlock", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.TextBlock", b =>
                {
                    b.HasOne("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.ContentBlock", null)
                        .WithOne()
                        .HasForeignKey("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.TextBlock", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.VideoBlock", b =>
                {
                    b.HasOne("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.ContentBlock", null)
                        .WithOne()
                        .HasForeignKey("OmmelSamvirke.Domain.Features.Pages.Models.ContentBlocks.VideoBlock", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OmmelSamvirke.Domain.Features.Communities.Models.Community", b =>
                {
                    b.Navigation("Pages");
                });

            modelBuilder.Entity("OmmelSamvirke.Domain.Features.Pages.Models.LayoutConfiguration", b =>
                {
                    b.Navigation("ContentBlocks");
                });
#pragma warning restore 612, 618
        }
    }
}
